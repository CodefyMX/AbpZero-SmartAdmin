@model Cinotam.ModuleZero.AppModule.Users.Dto.CreateUserInput

@{
    Layout = null;
}
<div class="modal-dialog" id="leaderModal" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×
            </button>
            <h4 class="modal-title"><img src="~/Scripts/smartAdminScripts/plugin/ckeditor/samples/assets/inlineall/logo.png" width="150" alt="SmartAdmin"></h4>
        </div>
        <div class="modal-body no-padding">

            <form action="@Url.Action("CreateEditUser")" method="POST" id="createEditForm" class="smart-form">
                <header>
                    @L("RegisterUserForm")

                    @if (Model.Id != 0)
                    {
                        <a data-id="@Model.Id" class="pull-right btn btn-sm btn-danger js-delete-user">@L("Delete")</a>

                    }

                </header>
                @Html.HiddenFor(a => a.Id)
                <fieldset>
                    <section>
                        <div class="row">
                            <label class="label col col-2">@L("UserName")</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-user"></i>
                                    @Html.TextBoxFor(a => a.UserName, new { required = "required" })
                                </label>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="row">
                            <label class="label col col-2">@L("EmailAddress")</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-envelope-o"></i>
                                    @Html.TextBoxFor(a => a.EmailAddress, new { required = "required", type = "email" })
                                </label>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="row">
                            <label class="label col col-2">@L("Name")</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-user"></i>
                                    @Html.TextBoxFor(a => a.Name, new { required = "required" })
                                </label>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="row">
                            <label class="label col col-2">@L("Surname")</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-user"></i>
                                    @Html.TextBoxFor(a => a.Surname, new { required = "required" })
                                </label>
                            </div>
                        </div>
                    </section>

                    <section>
                        <div class="row">
                            <label class="label col col-2">@L("Password")</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-lock"></i>
                                    @Html.TextBoxFor(a => a.Password, new { type = "password", required = "required", autocomplete = "off"})
                                </label>
                            </div>
                        </div>
                    </section>
                    <section>
                        <label class="checkbox">
                            @Html.CheckBoxFor(a => a.IsActive)
                            <i></i>@L("IsActive")
                        </label>
                    </section>
                </fieldset>
                <footer>
                    <button type="submit" class="btn btn-primary">
                        @L("Save")
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        @L("Cancel")
                    </button>
                </footer>

            </form>
        </div>
    </div>
</div>
<script>
    (function () {
        var modalType = "MODAL_USER_CREATED";
        var modalTypeDeleted = "MODAL_USER_DELETED";
        var fullName = $("#Name").val() + " " + $("#Surname").val();
        $("body").on("click", ".js-delete-user", function () {
            var id = $(this).data("id");
            var confirmDelete = abp.utils.formatString (LSys("ConfirmDeleteUser"),fullName);
            abp.message.confirm(confirmDelete, LSys("ConfirmQuestion"), function (response) {
                if (response) {
                    abp.ui.setBusy($("#createEditForm"), abp.services.app.user.deleteUser(id).done(function () {
                        window.modalInstance.close({}, modalTypeDeleted);
                    }));
                }
            });
        });

        $("#createEditForm").on("submit", function (e) {

            e.preventDefault();
            var url = $(this).attr("action");
            var data = $(this).serializeFormToObject();
            data.IsActive = $("#IsActive").is(":checked");
            abp.ui.setBusy($("#createEditForm"), abp.ajax({
                url: url,
                data: JSON.stringify(data)
            }).done(function () {
                window.modalInstance.close({}, modalType);
            }));
        });
    })();
</script>
