@model Cinotam.ModuleZero.AppModule.Roles.Dto.RoleInput

@{
    Layout = null;
}

<div class="modal-dialog" id="leaderModal" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×
            </button>
            <h4 class="modal-title"><img src="~/Scripts/smartAdminScripts/plugin/ckeditor/samples/assets/inlineall/logo.png" width="150" alt="SmartAdmin"></h4>
        </div>
        <div class="modal-body no-padding">

            <form method="POST" id="createEditRole" class="smart-form">
                <header>
                    Formulario de Registro de Rol
                    @if (Model.Id != 0)
                    {
                        <a data-id="@Model.Id" class="pull-right btn btn-sm btn-danger js-delete-role">Eliminar</a>

                    }
                </header>
                @Html.HiddenFor(a => a.Id)
                <fieldset>
                    <section>
                        <div class="row">
                            <label class="label col col-2">Nombre</label>
                            <div class="col col-10">
                                <label class="input">
                                    <i class="icon-append fa fa-gear"></i>
                                    @Html.TextBoxFor(a => a.DisplayName)
                                </label>
                            </div>
                        </div>
                    </section>
                    <div class="row">
                        <div class="col col-12">
                            <h5>Permisos</h5>
                            <div class="tree smart-form">
                                <ul id="tree">
                                    @foreach (var permission in Model.AssignedPermissions)
                                    {
                                        <li id="@permission.Name">
                                            <span>
                                                <label class="checkbox inline-block">
                                                    @if (permission.Granted)
                                                    {
                                                        <input type="checkbox" checked="checked" id="@permission.Name" name="checkbox-inline">

                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" id="@permission.Name" value="@permission.Name">
                                                    }
                                                    <i></i>@permission.DisplayName
                                                </label>
                                            </span>
                                            @if (permission.ChildPermissions.Any())
                                            {
                                                <ul>
                                                    @foreach (var childPermission in permission.ChildPermissions)
                                                    {

                                                        <li id="@childPermission.Name">
                                                            <span>
                                                                <label class="checkbox inline-block">
                                                                    @if (childPermission.Granted)
                                                                    {

                                                                        <input checked="checked" id="@childPermission.Name" value="@childPermission.Name" type="checkbox">

                                                                    }
                                                                    else
                                                                    {

                                                                        <input id="@childPermission.Name" value="@childPermission.Name" type="checkbox">

                                                                    }
                                                                    <i></i>@childPermission.DisplayName
                                                                </label>
                                                            </span>
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <footer>
                    <button type="submit" class="btn btn-primary">
                        Guardar/Editar
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cancelar
                    </button>
                </footer>

            </form>
        </div>
    </div>
</div>
<script>
    (function () {
        var modalType = "MODAL_ROLE_CREATED";
        var modalTypeDelete = "MODAL_ROLE_DELETED";
        $(document).ready(function () {

            var roleName = $("#DisplayName").val();
            $("body").on("click", ".js-delete-role", function () {
                var id = $(this).data("id");
                abp.message.confirm("El rol "+roleName+" sera eliminado", "¿Esta seguro(a)?", function (response) {
                    if (response) {
                        abp.ui.setBusy($("#createEditRole"), abp.services.app.role.deleteRole(id).done(function () {
                            window.modalInstance.close(modalTypeDelete, {});
                        }));
                    }
                });
            });
            $('.tree > ul').attr('role', 'tree').find('ul').attr('role', 'group');
            $('.tree').find('li:has(ul)').addClass('parent_li').attr('role', 'treeitem').find(' > span').attr('title', 'Collapse this branch').on('click', function (e) {
                //var children = $ (this).parent ('li.parent_li').find (' > ul > li');
                //if (children.is (':visible')) {
                //    children.hide ('fast');
                //    $ (this).attr ('title', 'Expand this branch').find (' > i').removeClass ().addClass ('fa fa-lg fa-plus-circle');
                //} else {
                //    children.show ('fast');
                //    $ (this).attr ('title', 'Collapse this branch').find (' > i').removeClass ().addClass ('fa fa-lg fa-minus-circle');
                //}
                e.stopPropagation();
            });
            var checkBoxs = $("#tree input");
            var total = checkBoxs.length;
            $(checkBoxs).each(function (nmb) {
                var self = this;
                if (nmb > 0) {
                    //skip first
                    $(self).on("click", function () {
                        var allChecked;
                        if ($(this).is(":checked")) {
                            allChecked = $("#tree input:checked").length;
                            console.log("Total to check", total);
                            console.log("Total checked", allChecked);
                            if (allChecked + 1 >= total) {
                                $(checkBoxs[0]).prop("checked", true);
                            }
                        } else {
                            $(checkBoxs[0]).prop("checked", false);
                        }
                    });
                }

            });
            $(checkBoxs[0]).on("click", function () {
                if ($(checkBoxs[0]).is(":checked")) {
                    $(checkBoxs).each(function () {
                        $(this).prop("checked", true);
                    });
                } else {
                    console.log("Parent off");
                    $(checkBoxs).each(function () {
                        $(this).prop("checked", false);
                    });
                }
            });
            $("#createEditRole").on("submit", function (e) {
                var data = {
                    AssignedPermissions: [],
                    DisplayName: $("#DisplayName").val(),
                    Id: $("#Id").val()
                }
                e.preventDefault();
                $("#tree input:checked").each(function () {
                    var checkbox = this;
                    var value = $(checkbox).val();
                    data.AssignedPermissions.push({
                        DisplayName: value,
                        Name: value,
                        Granted: true
                    });
                });
                abp.ui.setBusy($("#createEditForm"),abp.services.app.role.createEditRole(data).done(function () {
                    window.modalInstance.close(modalType, {});
                }));
            });
            
        });
    })();
</script>